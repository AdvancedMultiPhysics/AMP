// Suppress all operatorEq (false positives if we use = default)
operatorEq:*

// Suppress all useStlAlgorithm (too aggressive)
useStlAlgorithm:*

// Suppress all shadow variables/functions (too many false positives)
shadowFunction:*
shadowVar:*
shadowVariable:*

// Suppress all returnDanglingLifetime (false positives with std::tie)
returnDanglingLifetime:*

// Suppress unmatched suppressions
unmatchedSuppression:*

// Suppress missing include message (we are not checking dependencies)
missingInclude:*

// Suppress unusedFunction messages (functions may be used by subsequent packages)
unusedFunction:*

// Suppress redundantAssignment/Copy, they can be better practice in many instances
redundantAssignment:*
redundantCopy:*

// Suppress duplicateCondition
duplicateCondition:*

// Suppress #error messages (they may be valid and will always be caught by compiler if options are exercised)
preprocessorErrorDirective:*

// Suppress virtualCallInConstructor
virtualCallInConstructor:*

// Suppress huge input warnings
invalidscanf:*
invalidscanf_libc:*

// Suppress known condition (too many false positives"
knownConditionTrueFalse:*


// Suppress common test warnings (example: x==x)
duplicateExpression:*/test/test*
uselessCallsCompare:*/test/test*
variableScope:*/test/test*
variableScope:*/test/diffusion/test*
variableScope:*/test/maps/dtk/test*
unreadVariable:*/test/test*
unusedVariable:*/test/maps/dtk/test*
knownConditionTrueFalse:*/oxide/OxideModel.cpp
knownConditionTrueFalse:*/ampmesh/test/testDendroSearch.cpp
constArgument:*/ampmesh/test/testDendroSearch.cpp
constArgument:*/ampmesh/test/testHex8ElementMapping.cpp


// Suppress warnings for ampmesh
syntaxError:*/AMP/ampmesh/*Iterator.h
duplicateExpression:*/ampmesh/testHelpers/meshTests.cpp
duplicateExpression:*/ampmesh/structured/BoxMesh.cpp
noExplicitConstructor:*/ampmesh/MeshID.h
noExplicitConstructor:*/ampmesh/MeshPoint.h
noExplicitConstructor:*/ampmesh/MeshGeometry.h
noExplicitConstructor:*/ampmesh/MeshElement.h
noExplicitConstructor:*/AMP/ampmesh/MeshUtilities.h
knownConditionTrueFalse:*/ampmesh/testHelpers/meshTestLoop.cpp
postfixOperator:*/ampmesh/testHelpers/meshTests.cpp
oppositeInnerCondition:*/src/ampmesh/MultiMesh.cpp
oppositeInnerCondition:*/src/ampmesh/loadBalance/loadBalanceSimulator.cpp
*:*/ampmesh/dendro/*
*:*/ampmesh/hex8_element_t.cpp
duplicateAssignExpression:*/src/ampmesh/testHelpers/meshTests.cpp
useInitializationList:*/ampmesh/structured/BoxMesh.cpp
useInitializationList:*/ampmesh/structured/StructuredGeometryMesh.cpp
redundantCondition:*/ampmesh/triangle/TriangleMeshElement.cpp
shadowVariable:*/ampmesh/STKmesh/STKMesh.cpp
invalidLifetime:*/ampmesh/libmesh/libmeshMesh.cpp


// Suppress warnings for discretization
duplicateExpression:*/discretization/test/DOFManager_tests.h
redundantCondition:*/discretization/test/test_Discretization.h


// Suppress warnings for graphics
*:/*/graphics/ogre/*


// Suppress warnings for material
unusedPrivateFunction:*/materials/Property.h
nullPointer:*/materials/Property.h


// Suppress warnings for matrices
exceptNew:*/src/matrices/trilinos/ManagedEpetraMatrix.cpp
uninitMemberVar:*/src/matrices/petsc/NativePetscMatrix.cpp
constParameter:*/AMP/matrices/Matrix.inline.h

// Supress warnings for operators
uninitMemberVar:*/src/operators/boundary/libmesh/RobinMatrixCorrection.cpp
uninitMemberVar:*/src/operators/boundary/libmesh/TractionBoundaryOperator.cpp
uninitMemberVar:*/src/operators/diffusion/DiffusionElement.cpp
uninitMemberVar:*/src/operators/flow/FlowElement.cpp
uninitMemberVar:*/src/operators/libmesh/MassElement.cpp
uninitMemberVar:*/src/operators/libmesh/NodeToGaussPointOperator.cpp
uninitMemberVar:*/src/operators/libmesh/SourceNonlinearElement.cpp
uninitMemberVar:*/src/operators/mechanics/MechanicsElement.cpp
uninitMemberVar:*/src/operators/boundary/libmesh/NeumannVectorCorrection.cpp
uninitMemberVar:*/src/operators/boundary/libmesh/RobinMatrixCorrection.cpp
passedByValue:*/src/operators/subchannel/SubchannelHelpers.cpp
passedByValue:*/src/operators/test/maps/testMultiDofDTKMapOperator-2.cpp
passedByValue:*/src/operators/test/maps/testMultiDofDTKMapOperator.cpp
useInitializationList:*/src/operators/VectorCopyOperator.cpp
useInitializationList:*/src/operators/map/AsyncMapOperator.cpp
useInitializationList:*/src/operators/boundary/libmesh/RobinMatrixCorrection.cpp
*:*/operators/test/dendro/*


// Suppress warnings for vectors
syntaxError:*/src/vectors/trilinos/thyra/ThyraVectorWrapper.cpp
redundantPointerOp:*/src/vectors/trilinos/thyra/ThyraVectorWrapper.cpp
uninitMemberVar:*/src/vectors/trilinos/thyra/ThyraVectorSpaceWrapper.cpp
uninitMemberVar:*/src/vectors/trilinos/thyra/NativeThyraVector.cpp
multiCondition:*/AMP/vectors/Scalar.hpp
noExplicitConstructor:*/AMP/vectors/Scalar.h
noExplicitConstructor:*/AMP/vectors/Vector.h
noExplicitConstructor:*/AMP/vectors/petsc/PetscHelpers.h
noExplicitConstructor:*/AMP/vectors/testHelpers/petsc/PetscVectorFactory.h
autovarInvalidDeallocation:*/src/vectors/petsc/PetscHelpers.cpp
constParameter:*/AMP/vectors/Vector.inline.h

// Suppress warnings for solvers
duplicateAssignExpression:*/src/solvers/test/mechanics/testMaterialModels_VonMisesPlasticity_2.cpp
knownConditionTrueFalse:*/src/solvers/test/trilinos/testTrilinosMLSolver_LinearFickOperator_bar.cpp


// Suppress warnings for time_integrators
useInitializationList:*/src/time_integrators/ColumnTimeOperator.cpp
useInitializationList:*/src/time_integrators/LinearTimeOperator.cpp
useInitializationList:*/src/time_integrators/TimeOperator.cpp
knownConditionTrueFalse:*/src/time_integrators/test/testIDA_NonlinearColumnOperator.cpp


// Suppress warnings for utils
noConstructor:*/AMP/utils/RNG.h
duplicateExpression:*/AMP/utils/Array.hpp
passedByValue:*/utils/test/test_AMP_MPI.cpp
copyCtorPointerCopying:*/src/utils/AMP_MPI.cpp
noExplicitConstructor:*/AMP/utils/Array.h
noExplicitConstructor:*/AMP/utils/ArraySize.h
noExplicitConstructor:*/AMP/utils/AMP_MPI.h
noExplicitConstructor:*/AMP/utils/Database.h
noExplicitConstructor:*/AMP/utils/string_view.h
noExplicitConstructor:*/AMP/utils/kdtree.h
noExplicitConstructor:*/utils/test/test_AMP_MPI.cpp
passedByValue:*/utils/threadpool/test/test_thread_pool.cpp
operatorEqRetRefThis:*/utils/threadpool/ThreadPoolId.hpp
memleak:*/utils/test/test_AMPManager.cpp
invalidPointerCast:*/utils/threadpool/atomic_helpers.cpp
duplicateAssignExpression:*/src/utils/test/test_MathExpr.cpp
knownConditionTrueFalse:*/utils/test/test_AsciiWriter.cpp
knownConditionTrueFalse:*/src/utils/test/test_AMP_MPI.cpp
knownConditionTrueFalse:*/src/utils/threadpool/thread_pool.cpp
*:*/utils/tinyexpr/tinyexpr.c
useInitializationList:*/src/utils/AMP_MPI.cpp
nullPointer:*/src/utils/Scanner.cpp
nullPointerRedundantCheck:*/src/utils/Scanner.cpp
duplicateExpression:*/utils/Database.hpp
duplicateExpression:*/utils/Array.hpp
nullPointer:*/utils/Array.hpp
nullPointer:*/utils/ArraySize.h
unreadVariable:*/utils/ReadTestMesh.cpp
resourceLeak:*/src/utils/test/test_DelaunayInterpolation.cpp
knownConditionTrueFalse:*/src/utils/DelaunayInterpolation.cpp
knownConditionTrueFalse:*/src/utils/DelaunayTessellation.cpp
arrayIndexOutOfBounds:*/src/utils/DelaunayTessellation.cpp
arrayIndexOutOfBounds:*/AMP/utils/DelaunayFaceList.hpp
containerOutOfBounds:*/src/utils/DelaunayTessellation.cpp
negativeContainerIndex:*/src/utils/DelaunayTessellation.cpp
unreadVariable:*/src/utils/DelaunayInterpolation.cpp
unreadVariable:*/src/utils/DelaunayTessellation.cpp
uninitvar:*/src/utils/DelaunayInterpolation.cpp
uninitvar:*/src/utils/DelaunayTessellation.cpp
redundantAssignment:*/src/utils/kdtree.cpp
templateRecursion:*/AMP/utils/AMP_MPI.I
shadowVariable:*/utils/DelaunayTessellation.cpp



