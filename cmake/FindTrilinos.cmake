# Function to find the trilinos version
FUNCTION ( TRILINOS_GET_VERSION )
    if (EXISTS "${TRILINOS_DIRECTORY}/include/Trilinos_version.h")
        FILE (STRINGS "${TRILINOS_DIRECTORY}/include/Trilinos_version.h" vstrings REGEX "#define TRILINOS_MAJOR_MINOR_VERSION ")
        foreach (line ${vstrings})
            STRING (REGEX REPLACE " +" ";" fields ${line}) # break line into three fields (the first is always "#define")
            LIST (GET fields 1 var)
            LIST (GET fields 2 val)
            SET (${var} ${val})         # Also in local scope so we have access below
        endforeach ()
        SET (TRILINOS_VERSION ${TRILINOS_MAJOR_MINOR_VERSION} PARENT_SCOPE)
    else ()
        MESSAGE (FATAL_ERROR "${TRILINOS_DIRECTORY}/include/Trilinos_version.h does not exist")
    endif ()
ENDFUNCTION ()


# Function to find the trilinos libraries
FUNCTION ( TRILINOS_SET_LIBRARIES )
    # Get the libs for thyra/nox
    IF ( ${TRILINOS_VERSION} LESS 101000  )
        FIND_LIBRARY ( TRILINOS_THYRACORE_LIB   NAMES thyra   PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    ELSEIF ( ${TRILINOS_VERSION} LESS 120000  )
        FIND_LIBRARY ( TRILINOS_THYRACORE_LIB   NAMES thyracore   PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    ENDIF()
    FIND_LIBRARY ( TRILINOS_NOX_LIB         NAMES nox         PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    IF ( (NOT TRILINOS_THYRACORE_LIB) OR (NOT TRILINOS_NOX_LIB) )
        MESSAGE ( ${TRILINOS_THYRACORE_LIB} )
        MESSAGE ( ${TRILINOS_NOX_LIB} )
        MESSAGE ( FATAL_ERROR "Trilinos libraries not found in ${TRILINOS_DIRECTORY}/lib" )
    ELSE()
        SET ( TRILINOS_NOX_LIBS
        ${TRILINOS_THYRACORE_LIB}
        ${TRILINOS_NOX_LIB}
        )
    ENDIF()
    # Get the libs for the vectors
    FIND_LIBRARY ( TRILINOS_EPETRA_LIB      NAMES epetra      PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_EPETRAEXT_LIB   NAMES epetraext   PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_KOKKOS_LIB      NAMES kokkos      PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_THYRAEPETRA_LIB NAMES thyraepetra PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_RTOP_LIB        NAMES rtop        PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_TPETRA_LIB      NAMES tpetra      PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    IF ( (NOT TRILINOS_EPETRA_LIB) OR (NOT TRILINOS_EPETRAEXT_LIB) OR (NOT TRILINOS_KOKKOS_LIB) OR 
         (NOT TRILINOS_THYRAEPETRA_LIB) OR (NOT TRILINOS_RTOP_LIB) )
        MESSAGE ( ${TRILINOS_EPETRA_LIB} )
        MESSAGE ( ${TRILINOS_EPETRAEXT_LIB} )
        MESSAGE ( ${TRILINOS_KOKKOS_LIB} )
        MESSAGE ( ${TRILINOS_THYRAEPETRA_LIB} )
        MESSAGE ( ${TRILINOS_RTOP_LIB} )
        MESSAGE ( ${TRILINOS_TPETRA_LIB} )
        MESSAGE ( FATAL_ERROR "Trilinos libraries not found in ${TRILINOS_DIRECTORY}/lib" )
    ELSE()
        SET ( TRILINOS_VEC_LIBS
        ${TRILINOS_TPETRA_LIB}
        ${TRILINOS_THYRAEPETRA_LIB}
        ${TRILINOS_RTOP_LIB}
        ${TRILINOS_KOKKOS_LIB}
        ${TRILINOS_EPETRAEXT_LIB}
        ${TRILINOS_EPETRA_LIB}
        )
    ENDIF()
    # Get the remaining libaries
    FIND_LIBRARY ( TRILINOS_TRIUTILIT_LIB   NAMES triutils    PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_AZTECOO_LIB     NAMES aztecoo     PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_GALERI_LIB      NAMES galeri      PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_ML_LIB          NAMES ml          PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_IFPACK_LIB      NAMES ifpack      PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_ZOLTAN_LIB      NAMES zoltan      PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_AMESOS_LIB      NAMES amesos      PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_LOCA_LIB        NAMES loca        PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_TEUCHOS_LIB     NAMES teuchos     PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_MOERTEL_LIB     NAMES moertel     PATHS ${TRILINOS_DIRECTORY}/lib   NO_DEFAULT_PATH )
    IF ( (NOT TRILINOS_TRIUTILIT_LIB) OR (NOT TRILINOS_AZTECOO_LIB) OR (NOT TRILINOS_GALERI_LIB) OR 
         (NOT TRILINOS_ML_LIB) OR (NOT TRILINOS_IFPACK_LIB) OR (NOT TRILINOS_ZOLTAN_LIB)  OR 
         (NOT TRILINOS_AMESOS_LIB) OR (NOT TRILINOS_LOCA_LIB) OR (NOT TRILINOS_TEUCHOS_LIB) OR 
         (NOT TRILINOS_MOERTEL_LIB) )
        MESSAGE ( ${TRILINOS_TRIUTILIT_LIB} )
        MESSAGE ( ${TRILINOS_AZTECOO_LIB} )
        MESSAGE ( ${TRILINOS_GALERI_LIB} )
        MESSAGE ( ${TRILINOS_ML_LIB} )
        MESSAGE ( ${TRILINOS_IFPACK_LIB} )
        MESSAGE ( ${TRILINOS_ZOLTAN_LIB} )
        MESSAGE ( ${TRILINOS_AMESOS_LIB} )
        MESSAGE ( ${TRILINOS_LOCA_LIB} )
        MESSAGE ( ${TRILINOS_NOX_LIB} )
        MESSAGE ( ${TRILINOS_KOKKOS_LIB} )
        MESSAGE ( ${TRILINOS_THYRAEPETRA_LIB} )
        MESSAGE ( ${TRILINOS_THYRACORE_LIB} )
        MESSAGE ( ${TRILINOS_RTOP_LIB} )
        MESSAGE ( FATAL_ERROR "Trilinos libraries not found in ${TRILINOS_DIRECTORY}/lib" )
    ELSE()
        SET ( TRILINOS_MISC_LIBS
        ${TRILINOS_TRIUTILIT_LIB}
        ${TRILINOS_AZTECOO_LIB}
        ${TRILINOS_GALERI_LIB}
        ${TRILINOS_ML_LIB}
        ${TRILINOS_IFPACK_LIB}
        ${TRILINOS_ZOLTAN_LIB}
        ${TRILINOS_AMESOS_LIB}
        ${TRILINOS_LOCA_LIB}
        ${TRILINOS_TEUCHOS_LIB}
        ${TRILINOS_MOERTEL_LIB}
        )
    ENDIF()
    # Get all the libraries
    SET ( TRILINOS_LIBS
        ${TRILINOS_NOX_LIBS}
        ${TRILINOS_VEC_LIBS}
        ${TRILINOS_MISC_LIBS}
        PARENT_SCOPE
    )
ENDFUNCTION ()


# Function to find the stkmesh libraries
FUNCTION ( STKMESH_SET_LIBRARIES )
    FIND_LIBRARY ( TRILINOS_SHARDS_LIB    NAMES shards    PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_INTREPID_LIB  NAMES intrepid  PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_STK_IO_LIB    NAMES stk_io    PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_STK_IO_UTIL_LIB NAMES stk_io_util PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_STK_UTIL_UTIL_LIB NAMES stk_util_util PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_STK_UTIL_PARALLEL_LIB NAMES stk_util_parallel PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_STK_UTIL_ENV_LIB NAMES stk_util_env PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_STK_MESH_BASE_LIB NAMES stk_mesh_base PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_STK_MESH_FEM_LIB NAMES stk_mesh_fem PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_IOSS_LIB NAMES Ioss PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_IOGN_LIB NAMES Iogn PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_IOHB_LIB NAMES Iohb PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_IOPG_LIB NAMES Iopg PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_IOTR_LIB NAMES Iotr PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_IONIT_LIB NAMES Ionit PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_IOEX_LIB NAMES Ioex PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_EXODUS_LIB NAMES exodus PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    FIND_LIBRARY ( TRILINOS_PAMGEN_LIB NAMES pamgen PATHS ${TRILINOS_DIRECTORY}/lib  NO_DEFAULT_PATH )
    IF ( (NOT TRILINOS_SHARDS_LIB) OR 
         (NOT TRILINOS_INTREPID_LIB) OR 
         (NOT TRILINOS_STK_IO_LIB) OR 
         (NOT TRILINOS_STK_IO_UTIL_LIB) OR  
         (NOT TRILINOS_STK_UTIL_UTIL_LIB) OR
         (NOT TRILINOS_STK_UTIL_PARALLEL_LIB) OR 
         (NOT TRILINOS_STK_UTIL_ENV_LIB) OR
         (NOT TRILINOS_STK_MESH_BASE_LIB) OR 
         (NOT TRILINOS_STK_MESH_FEM_LIB) OR 
         (NOT TRILINOS_IOSS_LIB) OR 
         (NOT TRILINOS_IOGN_LIB)  OR 
         (NOT TRILINOS_IOHB_LIB) OR
         (NOT TRILINOS_IOPG_LIB) OR
         (NOT TRILINOS_IOTR_LIB) OR
         (NOT TRILINOS_IONIT_LIB) OR 
         (NOT TRILINOS_IOEX_LIB) OR 
         (NOT TRILINOS_EXODUS_LIB) OR
         (NOT TRILINOS_PAMGEN_LIB) )
        MESSAGE ( ${TRILINOS_SHARDS_LIB} )
        MESSAGE ( ${TRILINOS_INTREPID_LIB} )
        MESSAGE ( ${TRILINOS_STK_IO_LIB} )
        MESSAGE ( ${TRILINOS_STK_IO_UTIL_LIB} )
        MESSAGE ( ${TRILINOS_STK_UTIL_UTIL_LIB} )
        MESSAGE ( ${TRILINOS_STK_UTIL_PARALLEL_LIB} )
        MESSAGE ( ${TRILINOS_STK_UTIL_ENV_LIB} )
        MESSAGE ( ${TRILINOS_STK_MESH_BASE_LIB} )
        MESSAGE ( ${TRILINOS_STK_MESH_FEM_LIB} )
        MESSAGE ( ${TRILINOS_IOSS_LIB} )
        MESSAGE ( ${TRILINOS_IOGN_LIB} )
        MESSAGE ( ${TRILINOS_IOHB_LIB} )
        MESSAGE ( ${TRILINOS_IOPG_LIB} )
        MESSAGE ( ${TRILINOS_IOTR_LIB} )
        MESSAGE ( ${TRILINOS_IONIT_LIB} )
        MESSAGE ( ${TRILINOS_IOEX_LIB} )
        MESSAGE ( ${TRILINOS_EXODUS_LIB} )
        MESSAGE ( ${TRILINOS_TEUCHOS_LIB} )
        MESSAGE ( ${TRILINOS_MOERTEL_LIB} )
        MESSAGE ( ${TRILINOS_PAMGEN_LIB} )
        MESSAGE ( FATAL_ERROR "Trilinos libraries (stkmesh) not found in ${TRILINOS_DIRECTORY}/lib" )
    ENDIF()
    SET ( TRILINOS_LIBS ${TRILINOS_LIBS}
        ${TRILINOS_SHARDS_LIB}
        ${TRILINOS_INTREPID_LIB}
        ${TRILINOS_STK_IO_LIB}
        ${TRILINOS_STK_IO_UTIL_LIB}
        ${TRILINOS_STK_UTIL_UTIL_LIB}
        ${TRILINOS_STK_UTIL_PARALLEL_LIB}
        ${TRILINOS_STK_UTIL_ENV_LIB}
        ${TRILINOS_STK_MESH_FEM_LIB}
        ${TRILINOS_STK_MESH_BASE_LIB}
        ${TRILINOS_IOSS_LIB}
        ${TRILINOS_IOGN_LIB}
        ${TRILINOS_IOHB_LIB}
        ${TRILINOS_IOPG_LIB}
        ${TRILINOS_IOTR_LIB}
        ${TRILINOS_IONIT_LIB}
        ${TRILINOS_IOEX_LIB}
        ${TRILINOS_SHARDS_LIB}
        ${TRILINOS_INTREPID_LIB}
        ${TRILINOS_STK_IO_LIB}
        ${TRILINOS_STK_IO_UTIL_LIB}
        ${TRILINOS_STK_UTIL_UTIL_LIB}
        ${TRILINOS_STK_UTIL_PARALLEL_LIB}
        ${TRILINOS_STK_UTIL_ENV_LIB}
        ${TRILINOS_STK_MESH_FEM_LIB}
        ${TRILINOS_STK_MESH_BASE_LIB}
        ${TRILINOS_IOSS_LIB}
        ${TRILINOS_IOGN_LIB}
        ${TRILINOS_IOHB_LIB}
        ${TRILINOS_IOPG_LIB}
        ${TRILINOS_IOTR_LIB}
        ${TRILINOS_IONIT_LIB}
        ${TRILINOS_IOEX_LIB}
        ${TRILINOS_EXODUS_LIB}
        ${TRILINOS_PAMGEN_LIB}
        ${TRILINOS_TEUCHOS_LIB}
        ${TRILINOS_MOERTEL_LIB}
        PARENT_SCOPE
    )
ENDFUNCTION ()


