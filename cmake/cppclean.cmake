# Find cppcheck if availible
FIND_PROGRAM( CPPCLEAN
    NAMES cppclean cppclean.exe 
    PATHS "${CPPCLEAN_DIRECTORY}" "C:/Program Files/Cppclean" "C:/Program Files (x86)/Cppclean" 
)
IF ( CPPCHECK )
    MESSAGE(Status "Using cppclean")
ELSE()
    MESSAGE(Status "cppclean not found")
ENDIF()

# Set the options for cppcheck
IF( NOT DEFINED CPPCLEAN_INCLUDE )
    SET( CPPCLEAN_INCLUDE )
    GET_PROPERTY( dirs DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}" PROPERTY INCLUDE_DIRECTORIES )
    FOREACH(dir ${dirs})
        SET( CPPCLEAN_INCLUDE ${CPPCLEAN_INCLUDE} "${dir}" )
    ENDFOREACH()
ENDIF()

# Helper function
FUNCTION( CPPCLEAN_PRINT_VAR FILENAME VAR )
    IF ( CPPCLEAN_${VAR} )
        FILE(APPEND "${FILENAME}" "MESSAGE(STATUS \"${VAR}:\")\n" )
        FILE(APPEND "${FILENAME}" "FOREACH( line \${${VAR}} )\n" )
        FILE(APPEND "${FILENAME}" "   MESSAGE(\${line})\n" )
        FILE(APPEND "${FILENAME}" "ENDFOREACH()\n" )
        FILE(APPEND "${FILENAME}" "MESSAGE(\"\")\n" )
        FILE(APPEND "${FILENAME}" "LIST(LENGTH ${VAR} len)\nMATH(EXPR ERR \"\${ERR}+\${len}\")\n" )
    ENDIF()
ENDFUNCTION()

# Add the test
IF ( CPPCLEAN )
    CHECK_ENABLE_FLAG( CPPCLEAN_UNNECESSARY_INCLUDE 1 )
    CHECK_ENABLE_FLAG( CPPCLEAN_EXTRA_INCLUDE 1 )
    CHECK_ENABLE_FLAG( CPPCLEAN_SHOULD_INCLUDE 1 )
    CHECK_ENABLE_FLAG( CPPCLEAN_INCLUDE_NOT_FOUND 1 )
    CHECK_ENABLE_FLAG( CPPCLEAN_FUN_NOT_FOUND 1 )
    CHECK_ENABLE_FLAG( CPPCLEAN_DECLARED 1 )
    CHECK_ENABLE_FLAG( CPPCLEAN_STATIC 0 )
    CHECK_ENABLE_FLAG( CPPCLEAN_FORWARD_DECLARE 0 )
    CHECK_ENABLE_FLAG( CPPCLEAN_UNUSED_VARIABLE 0 )
    CHECK_ENABLE_FLAG( CPPCLEAN_UNKNOWN 1 )
    # Create a script to run cppclean and check the results
    SET( FILENAME "${CMAKE_CURRENT_BINARY_DIR}/cppclean/script.cmake" )
    FILE(WRITE  "${FILENAME}" "# This is a automatically generated script to run cppclean\n\n" )
    FILE(WRITE  "${FILENAME}" "# Run cppclean\n" )
    FILE(APPEND "${FILENAME}" "EXECUTE_PROCESS( COMMAND ${CPPCLEAN} ${CPPCLEAN_OPTIONS}\n" )
    FOREACH(dir ${CPPCLEAN_INCLUDE})
        FILE(APPEND "${FILENAME}" "   --include-path \"${dir}\"\n" )
    ENDFOREACH()
    FOREACH(file ${CPPCLEAN_EXCLUDE})
        FILE(APPEND "${FILENAME}" "   --exclude \"${file}\"\n" )
    ENDFOREACH()
    FILE(APPEND "${FILENAME}" "   \"${CMAKE_CURRENT_SOURCE_DIR}\"\n" )
    FILE(APPEND "${FILENAME}" "   OUTPUT_FILE \"${CMAKE_CURRENT_BINARY_DIR}/cppclean/output.txt\"\n" )
    FILE(APPEND "${FILENAME}" "   ERROR_FILE  \"${CMAKE_CURRENT_BINARY_DIR}/cppclean/error.txt\"\n" )
    FILE(APPEND "${FILENAME}" "   RESULT_VARIABLE RESULT \n)\n" )
    FILE(APPEND "${FILENAME}" "\n# Check the results\n" )
    FILE(APPEND "${FILENAME}" "FILE(READ \"${CMAKE_CURRENT_BINARY_DIR}/cppclean/output.txt\" OUTPUT )\n" )
    FILE(APPEND "${FILENAME}" "STRING(REGEX REPLACE \";\"  \"\\\\\\\\;\" OUTPUT \"\${OUTPUT}\")\n" )
    FILE(APPEND "${FILENAME}" "STRING(REGEX REPLACE \"\\n\"  \";\"    OUTPUT \"\${OUTPUT}\")\n" )
    FILE(APPEND "${FILENAME}" "SET( UNNECESSARY_INCLUDE )\n" )
    FILE(APPEND "${FILENAME}" "SET( EXTRA_INCLUDE )\n" )
    FILE(APPEND "${FILENAME}" "SET( SHOULD_INCLUDE )\n" )
    FILE(APPEND "${FILENAME}" "SET( INCLUDE_NOT_FOUND )\n" )
    FILE(APPEND "${FILENAME}" "SET( FUN_NOT_FOUND )\n" )
    FILE(APPEND "${FILENAME}" "SET( DECLARED )\n" )
    FILE(APPEND "${FILENAME}" "SET( STATIC )\n" )
    FILE(APPEND "${FILENAME}" "SET( UNKNOWN )\n" )
    FILE(APPEND "${FILENAME}" "FOREACH( line \${OUTPUT} )\n" )
    FILE(APPEND "${FILENAME}" "   IF ( 0 )\n" )
    FOREACH ( str ${CPPCLEAN_SUPPRESSIONS} )
        FILE(APPEND "${FILENAME}" "   ELSEIF ( \"\${line}\" MATCHES \"${str}\" )\n" )
    ENDFOREACH()
    FILE(APPEND "${FILENAME}" "   ELSEIF ( \"\${line}\" MATCHES \"use a forward declaration instead\" )\n" )
    FILE(APPEND "${FILENAME}" "      SET( FORWARD_DECLARE \${FORWARD_DECLARE} \"\${line}\" )\n" )
    FILE(APPEND "${FILENAME}" "   ELSEIF ( \"\${line}\" MATCHES \"does not need to be #included\" )\n" )
    FILE(APPEND "${FILENAME}" "      SET( UNNECESSARY_INCLUDE \${UNNECESSARY_INCLUDE} \"\${line}\" )\n" )
    FILE(APPEND "${FILENAME}" "   ELSEIF ( \"\${line}\" MATCHES \"already #included\" )\n" )
    FILE(APPEND "${FILENAME}" "      SET( EXTRA_INCLUDE \${EXTRA_INCLUDE} \"\${line}\" )\n" )
    FILE(APPEND "${FILENAME}" "   ELSEIF ( \"\${line}\" MATCHES \"should #include header file\" )\n" )
    FILE(APPEND "${FILENAME}" "      SET( SHOULD_INCLUDE \${SHOULD_INCLUDE} \"\${line}\" )\n" )
    FILE(APPEND "${FILENAME}" "   ELSEIF ( \"\${line}\" MATCHES \"unable to find\" )\n" )
    FILE(APPEND "${FILENAME}" "      SET( INCLUDE_NOT_FOUND \${INCLUDE_NOT_FOUND} \"\${line}\" )\n" )
    FILE(APPEND "${FILENAME}" "   ELSEIF ( \"\${line}\" MATCHES \"not found in any directly\" )\n" )
    FILE(APPEND "${FILENAME}" "      SET( FUN_NOT_FOUND \${FUN_NOT_FOUND} \"\${line}\" )\n" )
    FILE(APPEND "${FILENAME}" "   ELSEIF ( \"\${line}\" MATCHES \"not found in expected header\" )\n" )
    FILE(APPEND "${FILENAME}" "      SET( FUN_NOT_FOUND \${FUN_NOT_FOUND} \"\${line}\" )\n" )
    FILE(APPEND "${FILENAME}" "   ELSEIF ( \"\${line}\" MATCHES \"declared but not defined\" )\n" )
    FILE(APPEND "${FILENAME}" "      SET( DECLARED \${DECLARED} \"\${line}\" )\n" )
    FILE(APPEND "${FILENAME}" "   ELSEIF ( \"\${line}\" MATCHES \"static data\" )\n" )
    FILE(APPEND "${FILENAME}" "      SET( STATIC \${STATIC} \"\${line}\" )\n" )
    FILE(APPEND "${FILENAME}" "   ELSEIF ( \"\${line}\" MATCHES \"unused variable\" )\n" )
    FILE(APPEND "${FILENAME}" "      SET( UNUSED_VARIABLE \${UNUSED_VARIABLE} \"\${line}\" )\n" )
    FILE(APPEND "${FILENAME}" "   ELSE ()\n" )
    FILE(APPEND "${FILENAME}" "      SET( UNKNOWN \${UNKNOWN} \"\${line}\" )\n" )
    FILE(APPEND "${FILENAME}" "   ENDIF()\n" )    
    FILE(APPEND "${FILENAME}" "ENDFOREACH()\n" )
    FILE(APPEND "${FILENAME}" "\n# Print the results\n" )
    FILE(APPEND "${FILENAME}" "SET( ERR 0 )\n" )
    CPPCLEAN_PRINT_VAR( "${FILENAME}" UNNECESSARY_INCLUDE )
    CPPCLEAN_PRINT_VAR( "${FILENAME}" EXTRA_INCLUDE )
    CPPCLEAN_PRINT_VAR( "${FILENAME}" SHOULD_INCLUDE )
    CPPCLEAN_PRINT_VAR( "${FILENAME}" INCLUDE_NOT_FOUND )
    CPPCLEAN_PRINT_VAR( "${FILENAME}" FUN_NOT_FOUND )
    CPPCLEAN_PRINT_VAR( "${FILENAME}" DECLARED )
    CPPCLEAN_PRINT_VAR( "${FILENAME}" STATUS )
    CPPCLEAN_PRINT_VAR( "${FILENAME}" FORWARD_DECLARE )
    CPPCLEAN_PRINT_VAR( "${FILENAME}" UNUSED_VARIABLE )
    CPPCLEAN_PRINT_VAR( "${FILENAME}" UNKNOWN )
    FILE(APPEND "${FILENAME}" "\n# Return\n" )
    #FILE(APPEND "${FILENAME}" "IF ( ERR )\n   MESSAGE(FATAL_ERROR \"cppclean failed (\${ERR})\")\nENDIF()\n" )
    FILE(APPEND "${FILENAME}" "RETURN()" )
    # Create the test
    ADD_TEST( cppclean ${CMAKE_COMMAND} -P "${FILENAME}" )
    SET_TESTS_PROPERTIES( cppclean PROPERTIES PROCESSORS 1 )
ENDIF()

