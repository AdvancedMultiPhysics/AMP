############################################################################
#  Configure tests
############################################################################

# Function to add a serial or 1,2,4 processor test dependent on the existence of a parallel matrix
FUNCTION( ADD_AMP_TEST_124_MATRIX EXEFILE ${ARGN} )
    IF ( USE_TRILINOS OR USE_PETSC )
        # We have a parallel matrix
        ADD_AMP_TEST_1_2_4( ${EXEFILE} ${ARGN} )
    ELSE()
        # We do not have a parallel matrix
        ADD_AMP_TEST( ${EXEFILE} ${ARGN} )
    ENDIF()
ENDFUNCTION()


# Copy test inputs
COPY_TEST_FILE( input_testAMGuniform)
COPY_TEST_FILE( input_testLinearRobinBoundaryOperator-1 )
COPY_TEST_FILE( input_testLinearRobinBoundaryOperator-2 )
COPY_TEST_FILE( input_testNonlinearKrylovAccelerator-NonlinearThermal-cylinder_kIsOne )
COPY_TEST_FILE( input_testNonlinearKrylovAccelerator-NonlinearThermal-cylinder_MATPRO )
COPY_TEST_FILE( input_testPetscSNESSolver-NonlinearThermal-cylinder_MATPRO petsc/data )
COPY_TEST_FILE( input_testPetscSNESSolver-JFNK-ML-NonlinearMechanics-1-normal mechanics/data )
COPY_TEST_FILE( input_testColumnSolver-LinearThermalAndFick-1 )
COPY_TEST_FILE( inputNonlinearKrylovAccelerator1 )
COPY_TEST_FILE( inputNonlinearKrylovAccelerator2 )
COPY_TEST_FILE( inputNonlinearKrylovAccelerator3 )
COPY_TEST_FILE( input_testMatrixFreeML-1 )
COPY_TEST_FILE( input_testMeshRefinementDiffusion-1 )
COPY_TEST_FILE( input_testNewFrozenVectorDesign )
COPY_TEST_FILE( input_testSolversForUserMatrix-ML )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-ML )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-ML-CG )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-ML-GMRES )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-ML-FGMRES )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-ML-BiCGSTAB )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-ML-TFQMR )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-ML-PetscFGMRES )
COPY_TEST_FILE( input_testTrilinosMueLuSolver-LinearThermalRobin )
COPY_TEST_FILE( input_testTrilinosMueLuSolver-LinearThermalOperator-2 )
COPY_TEST_FILE( input_testTrilinosMueLuSolver-LinearThermalOperator-3 )
COPY_TEST_FILE( input_testTrilinosMueLuSolver-LinearThermalOperator-bar )
COPY_TEST_FILE( input_testPetscGMRESTrilinosMueLuSolver-LinearThermalOperator-cylinder )
COPY_TEST_FILE( input_testTrilinosMueLuSolver-LinearThermalOperator-cylinder )
COPY_TEST_FILE( input_testTrilinosMueLuSolver-LinearThermalOperator-shell )
COPY_TEST_FILE( input_testTrilinosMueLuSolver-LinearThermalOperator-2_HALDEN )
COPY_TEST_FILE( input_testTrilinosMueLuSolver-LinearThermalOperator-2_HALDEN_clad )
COPY_TEST_FILE( input_testTrilinosMueLuSolver-LinearFickOperator-bar )
COPY_TEST_FILE( input_testTrilinosMueLuSolver-LinearElasticityOperator-1 )
COPY_TEST_FILE( input_testSolversForUserMatrix-MueLu )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-MueLu )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-MueLu-GMRES )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-MueLu-BiCGSTAB )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-MueLu-TFQMR )
COPY_TEST_FILE( input_testBoomerAMGSolver-LinearThermalRobin )
COPY_TEST_FILE( input_testBoomerAMGSolver-LinearThermalOperator-2 )
COPY_TEST_FILE( input_testBoomerAMGSolver-LinearThermalOperator-3 )
COPY_TEST_FILE( input_testBoomerAMGSolver-LinearThermalOperator-bar )
COPY_TEST_FILE( input_testBoomerAMGSolver-LinearThermalOperator-cylinder )
COPY_TEST_FILE( input_testBoomerAMGSolver-LinearThermalOperator-shell )
COPY_TEST_FILE( input_testBoomerAMGSolver-LinearThermalOperator-2_HALDEN )
COPY_TEST_FILE( input_testBoomerAMGSolver-LinearThermalOperator-2_HALDEN_clad )
COPY_TEST_FILE( input_testBoomerAMGSolver-LinearFickOperator-bar )
COPY_TEST_FILE( input_testBoomerAMGSolver-LinearElasticityOperator-1 )
COPY_TEST_FILE( input_testSolversForUserMatrix-BoomerAMG )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-BoomerAMG )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-BoomerAMG-CG )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-BoomerAMG-GMRES )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-BoomerAMG-FGMRES )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-BoomerAMG-BiCGSTAB )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-BoomerAMG-TFQMR )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-BoomerAMG-HypreCG )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-DiagonalPC-HypreCG )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-CG )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-GMRES )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-FGMRES )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-BiCGSTAB )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-TFQMR )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-BoomerAMG-PetscFGMRES )
COPY_TEST_FILE( input_testLinearSolvers-LinearThermalRobin-PetscFGMRES )


# Copy test data
IF ( AMP_DATA )
    COPY_MESH_FILE( testAMGmesh5 )
    COPY_MESH_FILE( simple_pellet_1x.e )
    COPY_MESH_FILE( pellet_lo_res.e )
    COPY_MESH_FILE( halden_1_pellet_9mil.e )
    COPY_MESH_FILE( halden_1_clad.e )
    COPY_MESH_FILE( fullMpcMesh-3 )
    COPY_MESH_FILE( distortedElementMesh )
    COPY_MESH_FILE( cylinder270.e )
    COPY_MESH_FILE( cylinder4K.e )
    COPY_MESH_FILE( cube4096.e )
    COPY_MESH_FILE( cube64.with.boundary.labels.e )
    COPY_MESH_FILE( cube.with.12.boundaries.e )
    COPY_MESH_FILE( cube.with.12.boundaries.2.e )
    COPY_MESH_FILE( brick.e )
ENDIF()


# Add the tests
INITIALIZE_TESTBUILDER()

IF ( USE_LIBMESH )
    ADD_AMP_TEST( testLinearSolvers-LinearThermalRobin)
    ADD_AMP_TEST( testLinearSolvers-LinearThermalRobin PROCS 2 )
    ADD_AMP_TEST_1_2_4( testSolversForUserMatrix )
    ADD_AMP_TEST( testLinearSolvers-LinearThermalRobinCSR )
    ADD_AMP_TEST( testLinearSolvers-LinearThermalRobinCSR PROCS 2 )
    ADD_AMP_TEST( testLinearSolvers-LinearThermalRobinCSR PROCS 4 )
ENDIF()
IF ( USE_LIBMESH AND USE_HYPRE )
    ADD_AMP_TEST( testBoomerAMGSolver-LinearThermalRobin )
    ADD_AMP_TEST_124_MATRIX( testBoomerAMGSolver-LinearThermalOperator-bar )
    ADD_AMP_TEST_124_MATRIX( testBoomerAMGSolver-LinearThermalOperator-2 )
    ADD_AMP_TEST_124_MATRIX( testBoomerAMGSolver-LinearFickOperator-bar )
    ADD_AMP_TEST_124_MATRIX( testBoomerAMGSolver-LinearElasticityOperator-1 )	
    ADD_AMP_PROVISIONAL_TEST( testNonlinearKrylovAccelerator-BoomerAMG-NonlinearThermal-1 )
ENDIF()
IF ( USE_PETSC AND USE_LIBMESH AND USE_HYPRE )
    ADD_AMP_TEST_124_MATRIX( testPetscSNESSolver-BoomerAMG-NonlinearThermal-1 )
    ADD_AMP_TEST_124_MATRIX( testPetscSNESSolver-JFNK-BoomerAMG-NonlinearMechanics-1 )
    ADD_AMP_TEST( testBoomerAMGSolver-LinearThermalRobin PROCS 2 )
    ADD_AMP_TEST_1_2_4( testBoomerAMGSolver-LinearThermalOperator-cylinder )
ENDIF()
IF( USE_TRILINOS AND USE_LIBMESH AND AMP_DATA )
    ADD_AMP_TEST( testAMGuniform )
    ADD_AMP_TEST( testMatrixFreeML )
    ADD_AMP_TEST_1_2_4( testLinearRobinBoundaryOperator-1 )
    ADD_AMP_PROVISIONAL_TEST( testNonlinearKrylovAccelerator-NonlinearThermal-1 )
    IF ( USE_TRILINOS_MUELU )
        ADD_AMP_TEST_1_2_4( testTrilinosMueLuSolver-LinearThermalRobin )
        ADD_AMP_TEST_1_2_4( testTrilinosMueLuSolver-LinearThermalOperator-bar )
        ADD_AMP_TEST_1_2_4( testTrilinosMueLuSolver-LinearFickOperator-bar )
        ADD_AMP_TEST_1_2_4( testTrilinosMueLuSolver-LinearThermalOperator-2 )
        ADD_AMP_TEST_1_2_4( testTrilinosMueLuSolver-LinearElasticityOperator-1 )
    ENDIF()
ENDIF()
IF( USE_PETSC AND USE_LIBMESH AND USE_TRILINOS AND AMP_DATA )
    ADD_AMP_PROVISIONAL_TEST( testMeshRefinementDiffusion-1 )
    ADD_AMP_TEST_1_2_4( testColumnSolver-LinearThermalAndFick-1 )
    IF ( USE_TRILINOS_MUELU )
        ADD_AMP_TEST_1_2_4( testPetscGMRESTrilinosMueLuSolver-LinearThermalOperator-cylinder )
    ENDIF()
ENDIF()
ADD_AMP_TEST( testNewFrozenVectorDesign )
FINALIZE_TESTBUILDER()

# Add subdirectories
IF ( USE_PETSC )
    ADD_SUBDIRECTORY( petsc )
ENDIF()
IF ( USE_TRILINOS )
    ADD_SUBDIRECTORY( trilinos )
ENDIF()
ADD_SUBDIRECTORY( mechanics )
ADD_SUBDIRECTORY( flow )
ADD_SUBDIRECTORY( subchannel )
ADD_SUBDIRECTORY( meshWriters )

